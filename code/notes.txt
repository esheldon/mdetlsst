TODO:
    * run with cosmics, bad cols, EDGE, bleeds
    * document all functions
    * run without buff
    * run 3 bands# no stack
    * pixel level tests of all
    * normalize bmask vs mask in the sim code: always
      use bmask

make-condor.py --run run-nostack01c --njobs 2000 --seed 22414 --ntrial 100 --nepochs 1 --nostack

nostack m1: 0.000460004 +/- 0.000619505 (3 sigma)


# odd image, no dithers or rotations etc.
om1: 0.000180467 +/- 0.00138297 (3 sigma)

# odd image, now with only dithers turned on
om1: 0.00447688 +/- 0.00184495 (3 sigma)

# doing our own psf coadd, dithers, 1 epoch, 1 band, odd image
# run-dither-psfcoadd01wq
# run-dither-psfcoadd01

d m1: -0.000190355 +/- 0.000817988 (3 sigma)


# doing our own psf coadd, dithers, rotation, 1 epoch 1 band, odd image
# run-dithrot-psfcoadd01wq
# run-dithrot-psfcoadd01

make-condor.py --run run-dithrot-psfcoadd01 --njobs 2000 --seed 22427 --ntrial 100 --nepochs 1 --bands r --coadd-dim 351 --dither --rotate
so far

dr m1: 0.00022097 +/- 0.000780681 (3 sigma)

# doing our own psf coadd, dithers, rotation, cosmics, 1 epoch 1 band, odd image
# run-cosmics01
# run-cosmics01c

make-condor.py --run run-cosmics01c --njobs 8000  --seed 22432 --ntrial 100 --nepochs 1 --bands r --coadd-dim 351 --dither --rotate --cosmic-rays

processed: 26455
drc m1: 0.000518781 +/- 0.000711157 (3 sigma)

# doing our own psf coadd, dithers, rotation, cosmics, bad columns, 1 epoch 1 band, odd image
# run-cosbc01c

make-condor.py --run run-cosbc01c --njobs 5000 --seed 22442 --ntrial 100 --nepochs 1 --bands r --coadd-dim 351 --dither --rotate --cosmic-rays --bad-columns


# processed: 29165
drcb m1: -0.00015786 +/- 0.000791077 (3 sigma)


# run-*descwl*
# wldeblend galaxies,
# doing our own psf coadd, dithers, rotation, cosmics, bad columns, 1 epoch 1 band, odd image

processed: 210117
drcbW m1: -7.60145e-05 +/- 0.000787508 (3 sigma)

# run-varywcs01
# varied both wcs shear and scale
# exp galaxies,

make-condor.py --run run-varywcs01 --njobs 2000 --seed 22445 --ntrial 100
--nepochs 1 --bands r --coadd-dim 351 --dither --rotate --cosmic-rays
--bad-columns --vary-wcs-shear --vary-scale

processed: 31025
drcbv m1: -0.00010605 +/- 0.000767164 (3 sigma) c2: -8.22732e-07 +/- 1.50306e-05 (3 sigma)

# next put in some psf shape in g2. This means we should
# add ability to do additive in the shear calculator
# all else same as run-varywcs01

# run-psfg2
make-condor.py --run run-psfg2 --njobs 2000 --seed 230${i} --ntrial 100
--nepochs 1 --bands r --coadd-dim 351 --dither --rotate --cosmic-rays
--bad-columns --vary-wcs-shear --vary-scale --psf-g2 0.02

processed: 29178
drcbvp m1: -0.000136185 +/- 0.000790829 (3 sigma) c2: -2.74396e-06 +/- 1.51087e-05 (3 sigma)


# large dither offsets
 make-condor.py --run run-bigdith01 --njobs 1000 --seed 341${i} --ntrial 100
 --nepochs 1 --coadd-dim 351 --dither --rotate --cosmic-rays --bad-columns
 --vary-wcs-shear --vary-scale --psf-g2 0.02 --dither-range 500 --se-dim 2048
 --bands r

processed: 25920
drcbvpLD m1: 3.55206e-05 +/- 0.000832433 (3 sigma) c2: -8.15667e-07 +/- 1.61921e-05 (3 sigma)



# riz but still one epoch

python make-condor.py --run run-riz01 --njobs 2000 --seed 340${i} --ntrial 100
--nepochs 1 --coadd-dim 351 --dither --rotate --cosmic-rays --bad-columns
--vary-wcs-shear --vary-scale --psf-g2 0.02; done

processed: 29171
drcbvpRIZ m1: 6.09361e-05 +/- 0.00058318 (3 sigma) c2: -3.92082e-07 +/- 1.41084e-05 (3 sigma)


# ran with both images even, looks fine, with m -0.0009 < m < 0.0009.
run-even01*
# ran with both coadd even se odd, looks fine, with m -0.001 < m < 0.001 so
# far.
run-evencoadd01*


# ran with power spectrum psf, variation_factor 1.0 (default 10) which should
# be not extreme.  3 bands, 1 epoch per band
run-pspsf02*

drcbvRIZVP1-1 m1: 5.46647e-05 +/- 0.000511308 (3 sigma) c2: 1.99231e-06 +/- 9.4422e-06 (3 sigma)


# run with variance factor 10 still just riz one epoch
run-pspsf03 and run-drcbvRIZVP10-1 combined

drcbvRIZVP10-1 m1: 0.0015791370619251863 +/- 0.0006143070568584828 (3 sigma) c2: -2.7998012106269173e-06 +/-  1.3837405146683827e-05 (3 sigma)


# run with variance factor 10, but 10 epochs per band
run-pspsf04 so far
drcbvRIZVP10-10 m1: 0.000196262 +/- 0.000799391 (3 sigma) c2: 2.05778e-07 +/- 1.64111e-05 (3 sigma)

# stars at high density 20/sq arcmin
#run-drcbvsRIZVP01-01*

#drcbvRIZVP1-1s m1: -0.000934491 +/- 0.000651256 (3 sigma) c2: 3.6553e-06 +/- 9.83987e-06 (3 sigma)


# stars and star masks and bleed trails
# this one was at high density, 20/sq arcmin
run-drcbvsSRIZVP01-01*

# drcbvRIZVP1-1sS m1: -0.00108199 +/- 0.000755978 (3 sigma) c2: -6.79178e-07 +/- 1.12536e-05 (3 sigma)

# stars and star masks and bleed trails at 1/sq arcmine
run-drcbvsSRIZVP01-01-v2*

drcbvRIZVP1-1sS m1: -0.000108033 +/- 0.000479581 (3 sigma) c2: -4.84301e-06 +/- 8.76489e-06 (3 sigma)

# fixed bug weighting in psf coadd with run run-drcbvsSRIZVP01-01-v3* and got
# m1: -0.00018967 +/- 0.00049179 (3 sigma)
# c2: -1.36212e-06 +/- 9.09072e-06 (3 sigma)
# looks consistent with v2 before bug fix


# slurm notes
run-drcbvRIZVP10-1
50 nodes 1 hour queued for 8.5 hours (actually ran for only 35 min)
100 nodes 3 hours

run-drcbvsSRIZVP1-01-anl*
16 nodes, 9 hours, did not wait that long actually ran in 7:15 so could do
7:45 or 8 hours for those

run-drcbvsSRIZVP01-01-v3-anl*
16 nodes took 6:50 to finish, had set limit to 7:50


# seeing bias with stellar density
# *test01 runs, used hash 1fbb7e7
#
# noticed that the mean R of stars is non zero
# mag limit 20 gives no problem in R but 17 does
# turning off saturation of pixels made the mean R like -0.3!
# using variable folding threshold did not help (worried about sharp edges in
# stamps)

- things to try
    * different peak finder etc. -> sextractor
        - -0.3 for all?
        - going back to stack reduced it greatly
    - masking bright-ish stars; we even did a cut at 17 though!
    - full deblending
    - just taking peaks and not centers after deblending

- cutting s/n helps!

    - so low s/n objects are biased when there are bright and brightish stars 

    - ideas why
        - junk objects more likely with bright stars around?
        - things near the edge of the image due to wings?  Would just do a cut
          which we should be doing anyway
            - running with trim
            - no difference
        - could be junk near the stars rather than far away, in which case the
          star mask for bright stars would be key
        - stamps too small for low s/n objects?
            - 32x32, 48x48 looks no better
        - deblending
            - still biased, maybe worse?
        - lower thresh to 5
            - about the same
        - 6'' box around stars with mag < 18
            - about the same
        - did grid run with mag 17 (grid gals with small size and fixed mag)
          and all looks fine
             - this suggests it isn't the drawing of mag 17 objects that is
               the problem

- trying full run
    - ran with blending
        run-drcbvWsDRIZVP01-01-mag17-brightmask-*
        bias is much higher now, maybe it was deblending?
    - running without deblending now
        run-drcbvWsDRIZVP01-01-mag17-nodeblend-*

    - bias is higher.  Put back in expand stamps rather than fold
      descwl-shear-sims d946958ed0964ff0a6dc4584e3a11d6d2ad79fa7
        - run-drcbvWsDRIZVP01-01-mag17-expand-* (not wq one had name redo
          instead, need to rename)


    - running through and testing commits (although by hand)

        - I reverted sim code to 1fbb7e7 on 2020-03-04 and did a single job
          and the outputs are identical, so it is something in the sim since
          that commit
        - b29ca9e filter stars outside sampler
            - single trial looks same
        - 5dc71f2 remove duplicated code 
            - single trial looks same


        - 72bb0eb (current on bright_stars) remove unused import
            - does differ

        - 72bb0eb but bright strateget expand and trim_stamps false
            - does differ and is exactly same as above

        - 72bb0eb but reverting by band sat
            - does differ

        - 5dc71f2 but with by band sat test-5dc71f2-byband-sat.fits agrees
          with test-72bb0eb.fits for single trial

            for 20 trials there were differences, but less common

            The newer by band sat generally saturates at *brighter* levels in
            r,i,z. Is having them saturate a good thing since they can't get
            too bright?  I did try with the bright mask but it didn't help
            this problem

            recall mag 20 limit worked fine

            are our sat vals correct when we have the full 10 year depth
            in wldeblend?

            try repeating recent bright_stars branch with saturation off,
            and it should get worse
            run-drcbvWsDRIZVP01-01-mag17-expand-notrim-nosat-wq 
            72bb0ebf9a0ce356938d6b09bab8d86559e24ea2

- I think it is the psf dims being too small
    - running again with config
            run-drcbvWsDRIZVP01-01-mag17-expand-notrim.yaml 
      runs are
            run-drcbvWsDRIZVP01-01-mag17-expand-notrim-psf-dims-wq
            run-drcbvWsDRIZVP01-01-mag17-expand-notrim-psf-dims-c1
            run-drcbvWsDRIZVP01-01-mag17-expand-notrim-psf-dims-anl*
                had time 7:15:00 but ran over

      Now using original psf dims and setting zeros for the bad psf pixels.
      This fixes the issue with visible boxes around bright stars in the
      reconvolved images.
      
      I think this could work ok for many epochs but maybe not for 3 (r+i+z)
      but I'll do a test

      mdet-lsst-sim (psf-dims) 3afd6fa7090f3ba0256c2ea4310e39bb784edc4c
      descwl_shear_sims (master) 85fe859b789a75ea4a7234b39ca8148a06884cc5
      descwl_coadd (zero-bad-psf) c5676905ad5f20b46ffae5f6c0ac81ed30ed8ea4
      metadetect (deblend) b9062a7fa3b70eeed393b7171250f75daf7bef28

      runs
          - with stars no mag cut
              - run-drcbvWsDRIZVP01-01-expand-notrim-psf-dims-*
              (one was --expand accidentally)
              - so far seeing close to 3 sigma *negative* m, opposite
              sign.  Running more
              - if it holds up, how can we explain?  Rendering?
              I checked, for mag 12 stars we are getting artifacts in the
              sheared images, even for huge stamps being put in or using
              folding threshold adjustments.  Maybe issue
              is with rendering the psf image?

              worse artifacts with saturation/interpolation

              it is due to psf fwhm being to small, making it larger it
              goes away

          - galaxies only for noise comparision and to make sure tweaks
            have not caused biases
              - run-drcbvWDRIZVP01-01-expand-notrim-psf-dims-*
              
               drcbvWDRIZVP01-01 m1: -0.000572808 +/- 0.0014463 (3 sigma) c2: 6.41395e-06 +/- 1.61771e-05 (3 sigma)

- now doing masking of BRIGHT and interpolating
    - descwl_coadd (replace-bright-stars) 4ec1118c982c5950dc9ae7d89dfc5b1508c2d7d3
    - metadetect (deblend) 73e49c13fa9e14a1d7cf5841b3e830170ab35bcb
    - mdet-lsst-sims (send-rng-to-coadds) e38d09524756e14e8f4c910569922900cecf79a9
    - descwl-shear-sims (bright-star-mask) f67dab03c7c95d00983fcf640827ca491539d71a

- next
    - for now, maybe easiest to just take any star marked as "saturated" and
      draw the bright star mask for all bands, and turn off saturation.
        - turn off the placing of fake bleeds etc.
    - scaling of wldeblend is wrong
    - use bleed trail templates
        - should we still do saturation?


- noise tests
    - don't use round wldeblend
    - don't do noise cancelling
    - stars run run-drsWRIZ-v3
    - no stars run run-drWRIZ-v2
    - descwl-shear-sims (master) da9d033ce1b713a07e8fbdd5764637f3e17c7546
    - descwl_coadd (master) 19db82809c9d2aee9f12c62eb51611bf3b2732e3
    - metadetect (master) 9b57df37de943e0a8198ffa2f517572fb300d33d
    - mdet-lsst-sim (weighting) 96aa4fca9408440bd72c8092f149184d32dec771

    - now I see that using the most area (in terms of star cut) and lowest s/n
      cut gives the most precise shear recovery.
    - the increase in noise is about 14%
    - so for plot we can just do s/n > 10 and compare noise with stars, but
      since we are not seeing a bias I think maybe we don't even need the
      plot.

- lessons from the above
	- when you do noise cancelling you get smaller errors using higher s/n cuts
	- this is not true without the noise cancelling
	- Hypothesis: higher s/n objects are more likely to be detected in both runs so we cancel the shape noise

    - Corollary
        - the noise cancelling works differently with stars in place because
          they are not sheared (they don't move)
        - To test noise differences with and without stars we can't do noise
          cancelling

    - what should have been obvious
        - you can't test noise with and without stars (or in any other way)
          with round objects.
        - You will think the differences are bigger than they are because you
          ignored the dominant noise source

- larger test with round wldeblend and stars
    - stars run run-drsWRIZ-v4
    - s/n > 10 T ratio 1.2  

drsWRIZ -0.00219223 < m1 < 0.00336053 (99.7%)  -1.9183e-05 < c2 < 3.13332e-05 (99.7%)

- using star bleeds but still gauss psf (moffat bright stars are huge and our
  masks are inadequate)

    descwl-shear-sims (bleeds) 481b67ae2659807f0757a36015b319840d7cfaea
    descwl_coadd (bright-flag-sat) b65bf4a685832e7c21394b1235829c16486bfafd
    metadetect (master) 9b57df37de943e0a8198ffa2f517572fb300d33d
    mdet-lsst-sim (weighting) 5b55ec0c19ff3afa574a5565b47231484ba6957e
    mdet-lsst-config (master) 29d16e609d2b5b7245f42bdd34373faa07eef50d

    drsSWRIZ-v1
    
    looks OK

- with power specrum psf and moffat, we need to make the masks adaptive
    drsSBWRIZ-v1, v2

    forgot P for power spectrum psf

    bias as a function of density
    with v2 saved masked frac and cutting on that also leaves a bias
    still doing full analysis to make a plot

- run-drsPWRIZ-v1
    no saturation, no bleeds, but still PS/moffat psf

    if this works it could mean we need better interpolation for
    the bright stars

        - could try Matt's idea of fitting a psf model to the area,
          subtracting it, interpolating, then adding back
        - a simple way forward would be to exclude any fields with a
        bright stars, say brighter than 17
    - bias

    looked at some reconvolved images: there are boxes, go away
    if we use larger psfs

    still barely visible for mag 17!

- run-drsSBWRIZ-v3
    - saving min_star_mag
    - mdet-lsst-sims (mask-frac) c85c3f8582402b33eb351a5186b2693b151004c3
    - descwl-shear-sims (bleeds) f1138bb9cd16f55f7be92f89a163bb49262dc8ea
    - descwl_coadds (bright-flag-sat) 79fff565110169019b6fabfa3a5adb335334251a
    - metadetect (master) 9b57df37de943e0a8198ffa2f517572fb300d33d

    - seeing negative m1 bias

    - even cutting to low star density or min mag 19 retains the bias
    - maybe related to rendering changes?

- run-drgridRIZ-v1
    - grid exp 22 mag 8x8, for got P on it! it is power spectrum psf
    - see 
        0.0012705 < m1 < 0.00178272 (99.7%)
        -3.92948e-06 < c1 < 6.27837e-06 (99.7%)
        -4.41974e-06 < c2 < 6.31765e-06 (99.7%)
    - it was due to the close grid!  Not sure why exactly

- run-drgridRIZ-v2
    - forgot P on it
    - same but 17.75 mag 6x6 grid
    m1err: 7.06484e-05 (99.7%)
    0.000262936 < m1 < 0.000404232 (99.7%)
    -1.72265e-05 < c1 < 5.51327e-06 (99.7%)
    -8.08049e-06 < c2 < 1.4998e-05 (99.7%)

- run-drPRIZ-v1
   like run-drgridRIZ-v1 but random placement (not forgot P on that one)

    m1err: 0.000301709 (99.7%)
    0.000151968 < m1 < 0.000755387 (99.7%)
    -1.34662e-05 < c1 < 6.27998e-06 (99.7%)
    -8.10764e-06 < c2 < 1.02202e-05 (99.7%)

    so the bias in run-drgridRIZ-v1 was due to the close grid

- run-drgridPRIZ-mag17.75-hlr0.1-v1
    - bright, grid but small hlr

    m1err: 0.000206381 (99.7%)
    0.000476733 < m1 < 0.000889495 (99.7%)
    -3.257e-06 < c1 < 8.4159e-06 (99.7%)
    -8.27095e-06 < c2 < 4.39109e-06 (99.7%)

- run-drgridPRIZ-mag17.75-hlr0.1-v2
    - should not have called v2
    - using mdet-v002.yaml mdet config with psf gauss rather than fitgauss
    - horrible, not sure what went wrong

- run-drgridPRIZ-mag17.75-hlr0.1-3epoch-v1.yaml
    - looks fine!
    - it was the psf variation

    m1err: 0.00017257 (99.7%)
    0.000121935 < m1 < 0.000467075 (99.7%)
    -7.32199e-06 < c1 < 2.26714e-06 (99.7%)
    -7.63162e-06 < c2 < 2.7438e-06 (99.7%)

- run-drsBMWRIZ-v1
    - Moffat psf, using PS psf with small variations

    - descwl-shear-sims (master) 7ba7fddc38aa639c176dc37c3138058e053a9264
    - descwl_coadd (master) 09f3ce40101c7707fe80abbb9d85169e1740ad01
    - metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb
    - mdet-lsst-sim (mask-frac) 0c30e0c63a368b43e5011d6069b23f827828a33b

    - so far
    see trend with stellar density cut, but it is gone or much less
    when cutting s2n > 20, should try other s2n cuts

    - definitely seeing bias that depends on s/n, sign of some kind of
    selection effect
        - we know stars will move and the should not, we tested it with
        galaxies
        - the interpolated region is also moving
        - the *mask* is not moving, shearing.
        - need to explore this more but shelving it for now to work on wcs

- run-drsMWRIZsub-v1
    - PS psf not pure moffat
    subtract bright stars
    no star bleeds
    saturation ON
    - looks terrible

- run-drMWRIZ-v1
    - PS psf not pure moffat
    - same as run-drsMWRIZsub-v1 but no stars, does have saturation
    - biased!

- run-drgridMWRIZ-v1
    - PS psf not pure moffat
    - same as run-drMWRIZsub-v1 but on a grid
- run-drMWRIZ-e03-v1
    - PS psf not pure moffat
    - non grid but with 3 epochs
    - might be better

    s2n*-s2nmax-1000-Tratio1.2
    -0.00170132 < m1 < 0.000224577 (99.7%)
    -0.00172 < m1 < 0.000203144 (99.7%)
    -0.00155687 < m1 < 6.37816e-05 (99.7%)
    -0.00131863 < m1 < 6.62186e-05 (99.7%)
    -0.00120341 < m1 < 2.7618e-05 (99.7%)


- run-drMWRIZ-e01-v1
    - PS psf not pure moffat
    - non grid 1 epochs

    s2n*-s2nmax-1000-Tratio1.2
    -0.00491354 < m1 < -0.0018458 (99.7%)
    -0.00492467 < m1 < -0.00186832 (99.7%)
    -0.00446195 < m1 < -0.00189649 (99.7%)
    -0.00412676 < m1 < -0.00193204 (99.7%)
    -0.00417858 < m1 < -0.00221654 (99.7%)

- run-drMWRIZ-e01-pdim101-v1
    - PS psf not pure moffat
    - psf dim 101x101
    -0.00643398 < m1 < -0.00236129 (99.7%)
    -0.00628634 < m1 < -0.00222532 (99.7%)
    -0.00608821 < m1 < -0.00263865 (99.7%)
    -0.00531509 < m1 < -0.00235613 (99.7%)
    -0.00572281 < m1 < -0.00309834 (99.7%)

- run-drMWRIZ-e01-pdim101-gauss-v1
    - PS psf not pure moffat
    - metacal gauss psf treatment
    - psf dim 101x101
    -0.00561233 < m1 < -0.00131793 (99.7%)
    -0.00555236 < m1 < -0.00127129 (99.7%)
    -0.00476986 < m1 < -0.00108147 (99.7%)
    -0.00414951 < m1 < -0.000994451 (99.7%)
    -0.00402935 < m1 < -0.00121925 (99.7%)

- run-drWRIZ-v1
    - gauss psf, round gals
    - note there was no saturation here
    -0.00346503 < m1 < 0.00428442 (99.7%)
    -0.0040814 < m1 < 0.0028896 (99.7%)
    -0.00278754 < m1 < 0.0028852 (99.7%)
    -0.0030092 < m1 < 0.00190814 (99.7%)
    -0.00131853 < m1 < 0.0031443 (99.7%)

- run-drWRIZ-sat-v1
    - gauss with saturation

    -0.00171055 < m1 < 0.00270137 (99.7%)
    -0.00169746 < m1 < 0.00224007 (99.7%)
    -0.00131682 < m1 < 0.0018838 (99.7%)
    -0.00157975 < m1 < 0.00120882 (99.7%)
    -0.00115049 < m1 < 0.00136538 (99.7%)


- run-drMWRIZ-e01-pdim101-v2
    - pure moffat no PS psf
    - first results

    -0.00200233 < m1 < 0.000901179 (99.7%)
    -0.00232032 < m1 < 0.000112974 (99.7%)
    -0.00208602 < m1 < -1.09187e-05 (99.7%)
    -0.00191414 < m1 < -5.91293e-05 (99.7%)


- run-drcbPWRIZ-e01-v1
    repeat of run-drcbvWDRIZVP01-01-expand-notrim, only difference is trimming
    stamps (no longer an option ) and expand stars (only for stars) instead
    using gsparams, but there are no stars here
    -0.00494484 < m1 < -0.000974678 (99.7%)
    -0.00485397 < m1 < -0.00144677 (99.7%)
    -0.00463954 < m1 < -0.00163184 (99.7%)
    -0.00459561 < m1 < -0.00183136 (99.7%)

- run-drcbPWRIZ-e01-notrim-v1
    not trimming stamps
    -0.00609754 < m1 < -0.00211825 (99.7%)
    -0.00569964 < m1 < -0.00228601 (99.7%)
    -0.0055499 < m1 < -0.00253859 (99.7%)
    -0.00446522 < m1 < -0.00170969 (99.7%)
    regression

    what we know
        - gaussian psf looks ok
        - we know bias decreases for PS psf with more epochs
        - smaller bias for moffat.
        - larger psf dims didn't help
    ideas
        - scaling of wldeblend?  Our weights are 
        being ignored down stream, if we rescale it
        changes the wrongness
        - maybe try running with a single band and 3 epochs
          no dithering or rotations, moffat psf

- run-drMWI-e03-pdim101-v1
    - i band only, moffat, 3 epochs not dithers or rotations
    THIS WAS MISNAMED
    descwl-shear-sims 93c82488babbbb6def9e18875357db5dace39e9f
    descwl_coadd 6f89a8aa4a5484a1573e1c389d50974c6a9099e3
    mdetadetect a63236f063fe2979c7fbf89563080e6fe66895fb
    mdet-lsst-sim 8b05b37c8b178259b245f1a9b46a1002f04d9dfc

    -0.0017871 < m1 < 0.00186224 (99.7%)
    -0.00147252 < m1 < 0.00147524 (99.7%)
    -0.00134231 < m1 < 0.00128938 (99.7%)
    -0.0010626 < m1 < 0.00137614 (99.7%)

    Matt pointed out the 3 band won't work since the actual
    images are different, would need to do each coadd.

    That's a problem but doesn't really solve this issue since
    we know it worked before and works for gaussians

- run-drMWI-e03-pdim101-nfac0.58-v1
    - added noise factor 1/sqrt(3) to get expected noise for
      bands
    - THIS WAS MISNAMED

    -0.00140477 < m1 < 0.000444606 (99.7%)
    -0.00110189 < m1 < 0.000405356 (99.7%)
    -0.00107245 < m1 < 0.000268034 (99.7%)
    -0.000990446 < m1 < 0.00024526 (99.7%)

- run-drMWI-e03-pdim101-nfac0.58-v2
    - now with dithers and rotations
    - PROPERLY NAMED

    -0.00253242 < m1 < 1.08701e-05 (99.7%)
    -0.00213993 < m1 < 6.89018e-05 (99.7%)
    -0.00163038 < m1 < 0.000322181 (99.7%)
    -0.00185185 < m1 < -7.3797e-05 (99.7%)

- run-drMWI-e03-pdim201-nfac0.58-v1
    - see if larger psf images help
    -0.00292175 < m1 < -0.000696507 (99.7%)
    -0.00285748 < m1 < -0.000891879 (99.7%)
    -0.00283519 < m1 < -0.0010765 (99.7%)
    -0.00231508 < m1 < -0.00069203 (99.7%)

    It appears that in a single band we have a bias with just Moffat,
    but this is consistent with what we saw in multiple bands
    with just moffat and one epoch per band
    (run-drMWRIZ-e01-pdim101-v2).  So this is most likely not
    related to weighting (which larger PS bias might be)

    Don't know yet if related to the dithers and rot. Running more on
    run-drMWI-e03-pdim101-nfac0.58-v1 which had no dithers/rot despite name

- run-gridMI-mag22-hlr0.1-v1
    - grid with small exp objects, still s/n ~ 250
    - whoops, was epochs_per_band 10!
    6.50298e-05 < m1 < 0.00155616 (99.7%)

    - note also ran higher s/n on laptop, very small bias

- run-gridMI-e01-s2n15-hlr0.1-v1
    - s/n ~ 15 for all objects, 6x6 grid, no dithers or rotations
      hlr 0.1

      0.0030434 < m1 < 0.0207799 (99.7%)

- run-gridI-e01-mag18-hlr0.1-v1
    - same but gaussian psf
    - at s/n 10000 looks fine
    -0.000106696 < m1 < 0.000617305 (99.7%)

- run-gridI-e01-s2n15-hlr0.1-v1
    - same but gaussian psf
    - opposite sign bias
    - I saw no bias for high s/n with either Gaussian or Moffat

    -0.0239321 < m1 < -0.0043429 (99.7%)
    -0.000169974 < c1 < 0.000212005 (99.7%)
    -0.000341177 < c2 < 5.65919e-05 (99.7%)

- run-gridI-e01-s2n15-hlr0.1-nostack-v1
    - same but using nostack
    - huge error, must be a bug with the nostack code
    - note I saw no bias for high s/n so must be related to
      the noise

- TODO do a run with PS psf in single band


- run-drcbPWRIZ-e01-v2
    - repeating run-drcbPWRIZ-e01-v1 with Matt's bug fix, adding
      stats_ctrl.setWeighted(True)

  descwl-shear-sims 0f9abcd8d13152cca5277e1c64a2ddb4200bd718
      descwl_coadd e7b73bfe24b33927782f57548203a775d7e79047
      metadetect a63236f063fe2979c7fbf89563080e6fe66895fb
      mdet-lsst-sim a8e3912504c866b26d3ec45347357ccfcd23f6fb

    same

    -0.0062901 < m1 < -0.00279941 (99.7%)
    -0.00568339 < m1 < -0.00265748 (99.7%)
    -0.00571323 < m1 < -0.00305525 (99.7%)
    -0.00603989 < m1 < -0.00360843 (99.7%)

- run-gridI-e01-s2n15-hlr0.1-v2
    - after using ngmix with bug fixes
    - turns out the container had an old version of ngmix
    - I had been testing with master for a long time without
      a new release.

      -0.0185231 < m1 < -0.00711675 (99.7%)
      -0.000125071 < c1 < 9.78248e-05 (99.7%)
      -0.000131175 < c2 < 0.000100158 (99.7%)

- run-grid-dI-e06-s2n15-hlr0.1-v1
    - 6 epochs with dithers
    -0.0251275 < m1 < -0.00855712 (99.7%)
    -0.000158408 < c1 < 0.000166946 (99.7%)
    -0.000199293 < c2 < 0.000141235 (99.7%)

- run-grid-dI-e01-s2n15-hlr0.5-v1
    - what?
    - 0.0080492 < m1 < 0.0101611 (99.7%)

- run-grid-dI-e01-m18-hlr0.5-v1
    - mag 18 ok?
    - yes

    0.000373288 < m1 < 0.000431207 (99.7%)


- added tests of repeatability
     - checked that if I just copy the image to the noise it goes through 
       the same way, differences might be at the floating
       point level

- trivial sim
    - descwl-shear-sims (trivial-sim) 81eb76984093e829f91b3fcb55a2390ed6d59465
    - mdet-lsst-sim (trivial-sim-run) d713adea59b4f8b5d702ee9a755dab889fb35e67
    - descwl_coadd (master) e7b73bfe24b33927782f57548203a775d7e79047
    - metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb

    - run-trivial-grid-s2n10000-hlr0.5-v1
        0.000403327 < m1 < 0.000472004 (99.7%)
    - run-trivial-grid-s2n100-hlr0.5-v1
        -0.000173387 < m1 < 0.000883123 (99.7%)
    - run-trivial-grid-s2n050-hlr0.5-v1
        0.00027537 < m1 < 0.000888845 (99.7%)
    - run-trivial-grid-s2n015-hlr0.5-v1
        -0.000330092 < m1 < 0.000711955 (99.7%)

- run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1
    - maybe the zeroing of bad psf pixels is causing a problem
    - added ability to go ahead and trim psf
    - curious dependence on measured size cut
    mc-run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1-Tratio0.1:0.00794972 < m1 < 0.0351616 (99.7%)
    mc-run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1-Tratio0.7:0.00821586 < m1 < 0.0354435 (99.7%)
    mc-run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1-Tratio0.8:0.00932194 < m1 < 0.0366977 (99.7%)
    mc-run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1-Tratio0.9:0.0022908 < m1 < 0.0309245 (99.7%)
    mc-run-gridI-e01-s2n15-hlr0.1-p101-ptrim-v1-Tratio1.0:-0.0431838 < m1 < -0.0083105 (99.7%)

- run-grid-dI-e01-s2n15-hlr0.5-p101-ptrim-v1
    - also biased

- run-grid-dI-e01-s2n15-hlr0.5-p101-ptrim-v1
    - reverted to old descwl_coadd c567690
    - 0.00590452 < m1 < 0.0139226 (99.7%)

- run-grid-dI-e01-s2n15-hlr0.5-oldsim-v1
    - old sim
    m1err: 0.00394083 (99.7%)
    0.00608936 < m1 < 0.013971 (99.7%)
    -6.90215e-05 < c1 < 9.54642e-05 (99.7%)
    -0.000160613 < c2 < 8.75015e-06 (99.7%)

- run-grid-dI-e01-s2n15-hlr0.5-oldall-v1
    - revert all 
      mdet-lsst-sim (psf-dims) 3afd6fa7090f3ba0256c2ea4310e39bb784edc4c
      descwl_shear_sims (master) 85fe859b789a75ea4a7234b39ca8148a06884cc5
      descwl_coadd (zero-bad-psf) c5676905ad5f20b46ffae5f6c0ac81ed30ed8ea4
      metadetect (deblend) b9062a7fa3b70eeed393b7171250f75daf7bef28

      0.00604535 < m1 < 0.0170174 (99.7%)

      possibilities
      - these are the wrong git hashes
      - this case would have always been biased

- run-trivial-grid-s2n10000-hlr0.5-v2
    - running trivial sim through stack etc.
    - 0.000415041 < m1 < 0.00043025 (99.7%)

- run-trivial-grid-s2n015-hlr0.5-v2
    0.00033353 < m1 < 0.00122106 (99.7%)
    older 0.000368861 < m1 < 0.00135832 (99.7%)

    descwl-shear-sims (fake-tan-wcs-trivial-sim) 50ec575a8f6e8a55f0c9dc13679dc8bef85ee163
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082
    metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb
    mdet-lsst-sim (refactor-trivial-wcs) d6505ee65654aa8e91994034a23227ca5b9f5567

- testing dithers
    - offseting psf exactly as image is offset
    - If I don't offset the psf 0.00373711 < m1 < 0.00516374 (99.7%)
    - If I do offset the psf 0.000151796 < m1 < 0.000704616 (99.7%)
    - this checks out

- run-trivial-grid-d-s2n015-hlr0.5-v1
    - dithers at low s/n
    - note mdet-lsst-sim hash below is just a merge of refactor-trivial-wcs
    with no additional changes

    79396
    m1err: 0.000526939 (99.7%)
    2.71419e-05 < m1 < 0.00108102 (99.7%)

    mdet-lsst-sim (master) b08559943dc25443eb955b7e4139c3b3b4e0bdf4
    descwl-shear-sims (add-dithers-trivial-sim) ad8e0bc87b793580ceb0e18ea24b5c9dc4e7791b
    metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082

- run-trivial-grid-dr-s2n10000-hlr0.5-v1
    - rotations added high s/n
    0.000352043 < m1 < 0.000543963 (99.7%)

- run-trivial-grid-dr-e03-s2n10000-hlr0.5-v1
    - 3 epochs to make sure everything is lining up
    - looks ok
    0.000358413 < m1 < 0.000498766 (99.7%)


- run-trivial-grid-dr-s2n015-hlr0.5-v1
    descwl-shear-sims (master) 0d9a7326373084c27f5df56daf412f94451e2cbe
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082
    mdet-lsst-sim (master) b08559943dc25443eb955b7e4139c3b3b4e0bdf4
    metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb

    159958
    m1err: 0.000371595 (99.7%)
    0.000361468 < m1 < 0.00110466 (99.7%)

- run-trivial-drW-v1
    descwl-shear-sims (random-offsets) b30d96bdcf1d7d1fc7ca14c89855bc841cc3cc13
    mdet-lsst-sim (refactor-trivial-sim) d390967b81201a3bbce83baf3df016c35dda9348
    metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082

    -0.000830092 < m1 < 0.00157836 (99.7%)
    -0.000463863 < m1 < 0.00131969 (99.7%)
    -0.000552668 < m1 < 0.00105906 (99.7%)
    -0.000191793 < m1 < 0.0012959 (99.7%)

- run-trivial-drW-nfac0.58-v1-001.lsf
    - lower noise to match 3 band
    - lower noise doesn't seem to lower the shear noise much

    -0.000155605 < m1 < 0.00105179 (99.7%)
    4.40132e-05 < m1 < 0.000962923 (99.7%)
    1.02923e-05 < m1 < 0.00083154 (99.7%)
    0.000104515 < m1 < 0.000856681 (99.7%)

- run-trivial-grid-drM-s2n10000-hlr0.5-v1
    - moffat
    0.000290286 < m1 < 0.000403891 (99.7%)

- run-trivial-grid-drM-s2n10000-hlr0.5-v2
    - psf convolved before Add
    0.000290337 < m1 < 0.00042209 (99.7%)

- run-trivial-grid-drP-s2n10000-hlr0.5-v1
    - power spectrum PSF
    - note that it is significantly noisier, this
      is with same  number as run-trivial-grid-drM-s2n10000-hlr0.5-v2
    0.000224288 < m1 < 0.000645538 (99.7%)

    - adding more stats

    m1err: 7.20644e-05 (99.7%)
    0.000342191 < m1 < 0.00048632 (99.7%)
    -4.05005e-05 < c1 < 2.0139e-05 (99.7%)
    -2.54865e-05 < c2 < 4.11157e-05 (99.7%)

- run-trivial-drPW-nfac0.58-v1
    - ps PSF

    descwl-shear-sims (random-offsets) 036813d34df456463b4ad0a10bf5a60855b42030
    mdet-lsst-sim (refactor-trivial-sim) 2be13ae0be38cec600afda6490a36fc0a86a53ac
    metadetect (master) a63236f063fe2979c7fbf89563080e6fe66895fb
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082

    16/40

    m1err: 0.0016361 (99.7%)
    -0.00159921 < m1 < 0.00167298 (99.7%)

    m1err: 0.00162876 (99.7%)
    -0.00157462 < m1 < 0.0016829 (99.7%)

    m1err: 0.00142153 (99.7%)
    -0.00087344 < m1 < 0.00196961 (99.7%)

    m1err: 0.00125709 (99.7%)
    -0.000991009 < m1 < 0.00152317 (99.7%)

    m1err: 0.00113944 (99.7%)
    -0.000824236 < m1 < 0.00145464 (99.7%)


    agh bug not writing 1m
    tried nocancel but even larger error

- run-trivial-drPW-nfac0.58-v2
    - started new version without cancelling, to speed it up, but it turns out
    I had misinterpreted the nocancel calculations, they are indeed
    noisier

    ngmix (release2) 7fc0fe694911cb3c5c70284640c194e3ba4d5f9b

    descwl-shear-sims (random-offsets) 036813d34df456463b4ad0a10bf5a60855b42030
    descwl_coadd (master) 6465c54b4f2aa3372790bc3c8cab87e1cd3d1082

    mdet-lsst-sim (refactor-trivial-sim) 10fcf9b25ff6082b27fe66aa06f74fc7335ccc39
    metadetect (add-gauss-fit) ae4026cc8d6277301c3c1ab4c98adf66497c89b4

- stars
    - to avoid boxes, need big psf image for bright stars and Moffat
    - masking these areas though

- run-trivial-drsPW-nfac0.58-v1
    - stars!  with masking and saturation

      ngmix (release2) 7fc0fe694911cb3c5c70284640c194e3ba4d5f9b
      descwl-shear-sims (random-offsets) 4b40ae473e8a149391ddaa8268244be9b929649c
      mdet-lsst-sim (refactor-trivial-sim) 81a677e350a3f64fb8747402dfe13700eb03aa86
      metadetect (add-gauss-fit) ae4026cc8d6277301c3c1ab4c98adf66497c89b4
      descwl_coadd (master) d6ac39bf479e4065167730ccc318405ff099001f

      s2n > 30 stellar density cut 20 max mask frac 0.05
      m1err: 0.00117162 (99.7%)
      -0.00103505 < m1 < 0.00130819 (99.7%)
      -3.92551e-05 < c1 < 6.88251e-05 (99.7%)
      -3.87661e-05 < c2 < 6.83338e-05 (99.7%)



- run-trivial-drcbsBPW-nfac0.58-v1
    - turning on defects, cosmics, bad cols, bleed trails
    - FORGOT TO INTERP BRIGHT
    
    ngmix (release2) 7fc0fe694911cb3c5c70284640c194e3ba4d5f9b
    descwl-shear-sims (random-offset) 3274ab2361cda30231f2160b97a4c760489890da
    mdet-lsst-sim (refactor-trivial-sim) 2532e3015af689a6528292aca6effea4f29e2252
    metadetect (add-gauss-fit) ae4026cc8d6277301c3c1ab4c98adf66497c89b4
    descwl_coadd (master) d6ac39bf479e4065167730ccc318405ff099001f

- run-trivial-drcbsBPW-nfac0.58-v2
    - now with interp bright

    ngmix (release2) 7fc0fe694911cb3c5c70284640c194e3ba4d5f9b
    descwl-shear-sims (random-offset) 3274ab2361cda30231f2160b97a4c760489890da
    mdet-lsst-sim (refactor-trivial-sim) 2532e3015af689a6528292aca6effea4f29e2252
    metadetect (add-gauss-fit) ae4026cc8d6277301c3c1ab4c98adf66497c89b4
    descwl_coadd (master) d6ac39bf479e4065167730ccc318405ff099001f


New sim code returning DM ExposureF, mocked up DM PSF
-----------------------------------------------------

- run-lsst-grid-dr-s2n1000-v1
    m1err: 0.000171468 (99.7%)
    0.000262771 < m1 < 0.000605706 (99.7%)
    -4.49436e-06 < c1 < 5.15852e-06 (99.7%)
    -1.61866e-05 < c2 < 1.61308e-05 (99.7%)

- run-lsst-grid-dr-s2n100-v1

    m1err: 0.0001961 (99.7%)
    0.000266208 < m1 < 0.000658408 (99.7%)
    -3.91681e-06 < c1 < 4.18256e-06 (99.7%)
    -4.28025e-06 < c2 < 4.846e-06 (99.7%)

- run-lsst-grid-dr-s2n1000-v2
    - using Box2I for coadd
    m1err: 0.000187087 (99.7%)
    0.000128749 < m1 < 0.000502922 (99.7%)
    -3.55713e-06 < c1 < 5.89618e-06 (99.7%)
    -8.67191e-06 < c2 < 2.43204e-05 (99.7%)

- run-lsst-grid-dr-s2n1000-v3
    - using Box2I for coadd not starting at 0, 0
    m1err: 0.000175659 (99.7%)
    0.000146301 < m1 < 0.000497619 (99.7%)
    -9.4787e-06 < c1 < 7.41165e-07 (99.7%)
    -1.70056e-05 < c2 < 1.84086e-05 (99.7%)

- run-lsst-drcbsBPW-nfac0.58-v2
    - using config for run-lsst-drcbsBPW-nfac0.58-v1
    - no interp bright
    - biased for higher stellar densities, e.g.
		maskfrac-0.02-Tratio1.2-sdens025:0.00144233 < m1 < 0.00671157 (99.7%)
		maskfrac-0.02-Tratio1.2-sdens040:0.00311316 < m1 < 0.00834286 (99.7%)
		maskfrac-0.02-Tratio1.2-sdens060:0.00414311 < m1 < 0.00941382 (99.7%)
		maskfrac-0.02-Tratio1.2-sdens080:0.00504413 < m1 < 0.0103555 (99.7%)
		maskfrac-0.02-Tratio1.2-sdens100:0.00553631 < m1 < 0.0108679 (99.7%)

- run-lsst-drcbsBPW-nfac0.58-v3
    - using config for run-lsst-drcbsBPW-nfac0.58-v1
    - with interp bright
    - versions
        - descwl-shear-sims v0.3.0rc1
        - descwl_coadd 0.1.0rc1
        - mdet-lsst-sim 0.1.0rc1
    - current results after 46/80
	maskfrac-0.02-Tratio1.2-sdens005:-0.00127977 < m1 < 0.00129521 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens010:-0.000452107 < m1 < 0.00171633 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens025:-0.000531117 < m1 < 0.00154958 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens040:-0.000452779 < m1 < 0.00162708 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens060:-0.000402339 < m1 < 0.00168382 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens080:-0.000432238 < m1 < 0.00165753 (99.7%)
	maskfrac-0.02-Tratio1.2-sdens100:-0.000415728 < m1 < 0.0016747 (99.7%)

- run-lsst-grid-dr-s2n1000-v4
  - uses config run-lsst-grid-dr-s2n1000-v3.yaml
  - using new "online coadds"
  - no tags for this quick test

      m1err: 0.000188099 (99.7%)
       0.000262191 < m1 < 0.000638389 (99.7%)
      -4.41028e-06 < c1 < 5.85632e-06 (99.7%)
      -9.09472e-06 < c2 < 2.24379e-05 (99.7%)

- run-lsst-grid-dr-s2n100-v2
  - uses config run-lsst-grid-dr-s2n100-v1.yaml
  - using new "online coadds"
  - no tags for this quick test
  m1err: 0.00184129 (99.7%)
  -0.001675 < m1 < 0.00200758 (99.7%)
  -4.25881e-05 < c1 < 3.26525e-05 (99.7%)
  -6.07621e-05 < c2 < 2.41908e-05 (99.7%)

- run-lsst-grid-drcbP-s2n15
  - using new "online coadds"
    - versions
        - descwl-shear-sims v0.3.0rc1
        - descwl_coadd 0.1.0rc2
        - mdet-lsst-sim 0.1.0rc2
        - metadetect 0.3.2

        s/n > 5
        m1err: 0.00129438 (99.7%)
        -0.000937205 < m1 < 0.00165155 (99.7%)
        -3.17647e-05 < c1 < 1.65865e-05 (99.7%)
        -1.2871e-05 < c2 < 3.66703e-05 (99.7%)

        s/n > 10
        m1err: 0.00132413 (99.7%)
        -0.000740058 < m1 < 0.00190821 (99.7%)
        -3.29648e-05 < c1 < 1.62698e-05 (99.7%)
        -1.30442e-05 < c2 < 3.72744e-05 (99.7%)


- run-lsst-drcbsBPW-nfac0.58-online-v1
    - using new online coadds
    - versions
        - descwl-shear-sims v0.3.0rc2
        - descwl_coadd 0.1.0rc2
        - mdet-lsst-sim 0.1.0rc2
        - metadetect 0.3.2

      consistent with run-lsst-drcbsBPW-nfac0.58-v3
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens005:-0.000795469 < m1 < 0.00122918 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens010:-0.000275685 < m1 < 0.00143669 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens025:-0.00010142 < m1 < 0.00154207 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens040:-0.000200594 < m1 < 0.00144314 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens060:-0.000150246 < m1 < 0.00149976 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens080:-0.000174064 < m1 < 0.00147865 (99.7%)
    s2n-10-1000-maskfrac-0.02-Tratio1.2-sdens100:-0.000169504 < m1 < 0.00148439 (99.7%)


- run-lsst-grid-dr-s2n1000-v5
  - uses config run-lsst-grid-dr-s2n1000-v3.yaml
  - using new codes that only use online coadds
      - descwl-shear-sims branch nonoise
      - descwl_coadds branch nonoise
      - metadetect branch new-coadds
      - mdet-lsst-sim branch new-coadds

      s/n > 10

      m1err: 0.000123481 (99.7%)
      0.000320115 < m1 < 0.000567077 (99.7%)
      -3.55912e-06 < c1 < 2.98597e-06 (99.7%)
      -1.01252e-05 < c2 < 1.24163e-05 (99.7%)

- run-lsst-grid-drP-s2n1000-v1
    - config run-lsst-grid-drP-s2n1000-v1.yaml
    - using new codes that only use online coadds
      - descwl-shear-sims branch nonoise
      - descwl_coadds branch nonoise
      - metadetect branch new-coadds
      - mdet-lsst-sim branch new-coadds

      s/n > 10

      m1err: 0.000187398 (99.7%)
      0.000204038 < m1 < 0.000578834 (99.7%)
      -5.84173e-05 < c1 < 1.12635e-05 (99.7%)
      -3.45265e-05 < c2 < 3.8717e-05 (99.7%)


- run-lsst-grid-drP-s2n1000-v2
    - config run-lsst-grid-drP-s2n1000-v1.yaml
    - fixed bug dealing with psf reconstruction at wrong center
    - using new codes that only use online coadds
      - descwl-shear-sims branch nonoise
      - descwl_coadds branch nonoise
      - metadetect branch new-coadds
      - mdet-lsst-sim branch new-coadds

      s/n > 10

    m1err: 0.000199366 (99.7%)
    0.000212678 < m1 < 0.00061141 (99.7%)
    -4.02226e-05 < c1 < 3.41185e-05 (99.7%)
    -6.50565e-05 < c2 < 1.18342e-05 (99.7%)

- run-lsst-grid-drP-s2n1000-v3
    - config run-lsst-grid-drP-s2n1000-v1.yaml
    - fixed psf coadding, correct wcs and bbox
    - using new codes that only use online coadds
      - descwl-shear-sims branch nonoise
      - descwl_coadds branch nonoise
      - metadetect branch new-coadds
      - mdet-lsst-sim branch new-coadds

      s/n > 10

- run-lsst-grid-drP-s2n1000-v4
    - same as v3 but running again with tags
    - config run-lsst-grid-drP-s2n1000-v1.yaml
      - descwl-shear-sims 0.3.1
      - descwl_coadds 0.2.0
      - metadetect 0.3.6
      - mdet-lsst-sim 0.2.0

      m1err: 0.000182114 (99.7%)
      0.00024959 < m1 < 0.000613818 (99.7%)
      -4.67773e-05 < c1 < 2.20203e-05 (99.7%)
      -4.32459e-05 < c2 < 2.85379e-05 (99.7%)

- run-lsst-grid-drP-s2n1000-v5
    - same but with new masking code, star density now kept, mfrac
      in place
    - config run-lsst-grid-drP-s2n1000-v1.yaml
      - ngmix 2.0.0rc2
      - descwl-shear-sims 0.3.2
      - descwl_coadds 0.2.1
      - metadetect 0.3.6
      - mdet-lsst-sim 0.2.1

      m1err: 0.000184521 (99.7%)
      0.000210731 < m1 < 0.000579772 (99.7%)
      -2.78854e-05 < c1 < 3.98741e-05 (99.7%)
      -2.36296e-05 < c2 < 4.99874e-05 (99.7%)

- run-lsst-drcbsBPW-nfac0.58-v4
    - config run-lsst-drcbsBPW-nfac0.58-v1
    - same but with new masking code, star density now kept, mfrac
      in place
    - config run-lsst-grid-drP-s2n1000-v1.yaml
      - ngmix 2.0.0rc2
      - descwl-shear-sims 0.3.2
      - descwl_coadds 0.2.2
      - metadetect
          in branch bbox
          677d6b63c964cf1e7fe2e9475cb7738fdbca8755
          should be equivalent to 0.3.8
      - mdet-lsst-sim
          in branch cleanup-and-logging
          e8bc46dc6c6382977d984ee844a487189f690c1d
          should be equivalent to 0.2.2

          why noise higher than run-lsst-drcbsBPW-nfac0.58-online-v1 ?
          maybe related to bug in mask radius fixed here?  cb89bf10f77512b99939c9494ea6feba679dbf2a
          m1err: 0.0016161 (99.7%)
          -0.00224403 < m1 < 0.000988175 (99.7%)
          -0.000105155 < c1 < 6.30475e-05 (99.7%)
          -8.18646e-05 < c2 < 8.60453e-05 (99.7%)


- run-lsst-drcbsBPW-nfac0.58-v5
    - config run-lsst-drcbsBPW-nfac0.58-v1
    - checking errors with new code, in particular bug fix with star mask
    - new one does seem to be less noisy

- run-lsst-grid-drP-skysub-s2n1000-v1
    - running sky subtraction; note the true sky is
      zero so this is a check that sky subtraction doesn't
      cause problems in the absence of a sky
    - descwl-shear-sims master a808ffb377b1936964db312e87bd72299268ff2e
    - descwl_coadds 0.2.2
    - metadetect branch skysub-exceptions
        8c10478e2597b54499f853596ac2f5c310e8c293
    - mdet-lsst-sim branch skysub 6a7b635c75b9bd85be3aefb751fbe2272fd0c362
       equivalent to 0.2.3

    m1err: 0.000237871 (99.7%)
    0.0001141 < m1 < 0.000589842 (99.7%)
    -1.65888e-05 < c1 < 5.20693e-05 (99.7%)
    -1.00742e-05 < c2 < 3.14521e-05 (99.7%)

- run-lsst-drcbsBPW-nfac0.58-sky-v1
    - running sky subtraction; note the true sky is
      zero so this is a check that sky subtraction doesn't
      cause problems in the absence of a sky

    - descwl-shear-sims master a808ffb377b1936964db312e87bd72299268ff2e
    - descwl_coadds 0.2.2
    - mdet-lsst-sim 0.2.3
    - metadetect skysub-exceptions
        8c10478e2597b54499f853596ac2f5c310e8c293

- run-lsst-drcbsBPW-nfac0.58-thresh5-v1.yaml
    - same as run-lsst-drcbsBPW-nfac0.58-sky-v1 with
    - same software versions but with threshold of 5 sigma
    - sky subtraction
    - descwl-shear-sims master a808ffb377b1936964db312e87bd72299268ff2e
    - descwl_coadds 0.2.2
    - mdet-lsst-sim 0.2.3
    - metadetect skysub-exceptions
        8c10478e2597b54499f853596ac2f5c310e8c293

    - looks significantly worse especially for cuts at s/n > 10

- run-lsst-drcbBPW-nfac0.58-thresh5-v1.yaml
    - lower detection threshold but no stars
    - sky subtraction
    - descwl-shear-sims master a808ffb377b1936964db312e87bd72299268ff2e
    - descwl_coadds 0.2.2
    - mdet-lsst-sim 0.2.3
    - metadetect skysub-exceptions
        8c10478e2597b54499f853596ac2f5c310e8c293
    - looking biased low, e.g. for s2n-18-1000-mask_frac-0.10-mfrac-1.00-Tratio-1.2-sdens-100

    m1err: 0.000388854 (99.7%)
    -0.000702049 < m1 < 7.56583e-05 (99.7%)
    -1.43929e-05 < c1 < 2.7945e-05 (99.7%)
    -1.56653e-05 < c2 < 2.66561e-05 (99.7%)

- this might be an issue with sky subtraction
  rather than the stars, or both.  Will need to run without sky sub on

- try to speed up for faster tests like above: no coadd and use stamps

- run-lsst-grid-drP-s2n1000-stamp-v1
    - drawing with stamps
    - descwl-shear-sims master optimize-draw adde5c814d0152486b38ff052a25014e7f97f5d3
    - descwl_coadds 0.2.2
    - metadetect branch master b215c6dd52cedffe1dca7ba9571fda379ae768b1
    - mdet-lsst-sim 0.2.3
    m1err: 0.000182021 (99.7%)
    0.000219848 < m1 < 0.00058389 (99.7%)
    -4.55716e-05 < c1 < 2.03545e-05 (99.7%)
    -3.16218e-05 < c2 < 3.07224e-05 (99.7%)

- run-lsst-grid-drsP-s2n1000-stamp-v1
    - drawing with stamps
    - with stars added
    - descwl-shear-sims master optimize-draw adde5c814d0152486b38ff052a25014e7f97f5d3
    - descwl_coadds 0.2.2
    - metadetect branch master b215c6dd52cedffe1dca7ba9571fda379ae768b1
    - mdet-lsst-sim 0.2.3

    star dens < 100
    m1err: 0.00317146 (99.7%)
    0.0149288 < m1 < 0.0212717 (99.7%)
    -9.07783e-05 < c1 < 7.67876e-05 (99.7%)
    -3.62716e-05 < c2 < 8.76013e-05 (99.7%)

    star dens < 10
    m1err: 0.00232639 (99.7%)
    0.00568357 < m1 < 0.0103364 (99.7%)
    -6.33224e-05 < c1 < 8.67692e-05 (99.7%)
    -6.35173e-05 < c2 < 6.82142e-05 (99.7%)

    star dens < 5
    m1err: 0.00234128 (99.7%)
    0.00319264 < m1 < 0.00787519 (99.7%)
    -6.82548e-05 < c1 < 9.84844e-05 (99.7%)
    -8.09768e-05 < c2 < 4.93207e-05 (99.7%)

    ouch, maybe some issue with stars in grid mode

- run-lsst-cbPW-stamp-nowarp
    - stamps
    - no warping, no stars for speed
    - thresh 10
    - descwl_coadds branch coadd-simple 4ce050eea9fa50a4d42141fa6a349ac12375a576 
    - mdet-lsst-sim branch nocoadd 5978b461f2683d890255d3d29a6257747eeb9ca8
    - descwl-shear-sims branch optimize-draw 32fc9101fc4513e33df8fa2125458d9b6903c421
    - metadetect master b215c6dd52cedffe1dca7ba9571fda379ae768b1

    biased, maybe due to bad cols with no rotations?

    m1err: 0.00170639 (99.7%)
    -0.00381147 < m1 < -0.000398686 (99.7%)
    -8.00928e-05 < c1 < 0.000136424 (99.7%)
    -8.98773e-05 < c2 < 7.58657e-05 (99.7%)

- run-lsst-W-stamp-nowarp
    - stamps
    - no warping, gauss psf and no stars for speed, no features other than wldeblend
    - thresh 10
    - descwl_coadds branch coadd-simple 4ce050eea9fa50a4d42141fa6a349ac12375a576 
    - mdet-lsst-sim branch nocoadd 5978b461f2683d890255d3d29a6257747eeb9ca8
    - descwl-shear-sims branch optimize-draw 32fc9101fc4513e33df8fa2125458d9b6903c421
    - metadetect master b215c6dd52cedffe1dca7ba9571fda379ae768b1

    - lower noise than I expected (due to gauss psf, see below)
    - after 74
    - looks a bit low

    18 < s2n < 1000
    m1err: 0.000331957 (99.7%)
    -0.000385221 < m1 < 0.000278693 (99.7%)
    -3.2841e-05 < c1 < 1.61806e-05 (99.7%)
    -2.63967e-05 < c2 < 2.14044e-05 (99.7%)

- run-lsst-dMW-stamp-nowarp
    - same as run-lsst-W-stamp-nowarp but moffat (and dithers)
    - descwl_coadds branch coadd-simple 4ce050eea9fa50a4d42141fa6a349ac12375a576 
    - mdet-lsst-sim branch nocoadd f612e8f7fc169859aa5de6d8dcedb6243075cf1a
    - descwl-shear-sims branch optimize-draw 32fc9101fc4513e33df8fa2125458d9b6903c421
    - metadetect master b215c6dd52cedffe1dca7ba9571fda379ae768b1

    looks fine

    processed: 175999
    R11: 0.2706751981845648
    m1err: 0.000418128 (99.7%)
    -1.65699e-05 < m1 < 0.000819687 (99.7%)
    -2.45596e-05 < c1 < 2.26771e-05 (99.7%)
    -3.8357e-05 < c2 < 9.6613e-06 (99.7%)

- run-lsst-dsMW-stamp-nowarp-thresh5
    - same as run-lsst-dMW-stamp-nowarp with stars and thresh 5
    - descwl_coadds branch coadd-simple 4ce050eea9fa50a4d42141fa6a349ac12375a576 
    - mdet-lsst-sim branch nocoadd f612e8f7fc169859aa5de6d8dcedb6243075cf1a
    - descwl-shear-sims branch optimize-draw 32fc9101fc4513e33df8fa2125458d9b6903c421
    - metadetect master b215c6dd52cedffe1dca7ba9571fda379ae768b1

    looks normal

- Figure out why noise was lower than expected
- run-lsst-grid-W-s2n20-stamp-nowarp

    - descwl_coadds branch coadd-simple 4ce050eea9fa50a4d42141fa6a349ac12375a576 
    - mdet-lsst-sim branch nocoadd f612e8f7fc169859aa5de6d8dcedb6243075cf1a
    - descwl-shear-sims branch optimize-draw 32fc9101fc4513e33df8fa2125458d9b6903c421
    - metadetect master b215c6dd52cedffe1dca7ba9571fda379ae768b1

    2000
    m1err: 0.00142037 (99.7%)
    -0.00171841 < m1 < 0.00112234 (99.7%)
    -6.17078e-05 < c1 < 3.68508e-05 (99.7%)
    -5.75412e-05 < c2 < 5.27996e-05 (99.7%)

    running more
    s2n-10-10000-mask_frac-1.00-mfrac-1.00-Tratio-1.2-sdens-100
    m1err: 0.000460826 (99.7%)
    7.11892e-05 < m1 < 0.00099284 (99.7%)
    -1.32165e-05 < c1 < 5.75921e-06 (99.7%)
    -9.57981e-06 < c2 < 9.85111e-06 (99.7%)

    nocancel
    m1err: 0.00380652 (99.7%)

- run-lsst-grid-MW-s2n20-stamp-nowarp
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp
    - the s/n is slightly lower for moffat, maybe we can sort
      of rescale assuming all is from shot noise

    2000
    m1err: 0.00345385 (99.7%)
    -0.00387063 < m1 < 0.00303707 (99.7%)
    -7.07567e-05 < c1 < 2.87876e-05 (99.7%)
    -4.15268e-05 < c2 < 0.000104125 (99.7%)

    nocancel
    m1err: 0.00454754 (99.7%)

- run-lsst-grid-PW-s2n20-stamp-nowarp
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp

    2000
    m1err: 0.00352145 (99.7%)
    -0.00438957 < m1 < 0.00265332 (99.7%)
    -5.03842e-05 < c1 < 7.11804e-05 (99.7%)
    -6.84838e-05 < c2 < 4.99106e-05 (99.7%)

Massive difference in noise (2.5) when cancelling due to moffat! But only 18%
diff when *not* cancelling

With moffat the noise cancelling is less effective: for gauss
cancelling reduces noise to 0.5 of nocancel, for moffat only 0.77

always 36 detected for both

maybe related to lower response for moffat?  If the response
    is low maybe noise doesn't cancel as well?  R 0.46 for gauss, 0.38 for
    moffat but only matters if there is some difference in detection or
    measurement between + and - shear sims


- run-lsst-grid-MW-s2n20-stamp-nowarp-dilate
    - just dilate psf to see if less noisy
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp

    m1err: 0.00305601 (99.7%)
    -0.00548542 < m1 < 0.000626609 (99.7%)
    -8.98643e-05 < c1 < 4.6474e-05 (99.7%)
    -9.3957e-05 < c2 < 4.57204e-05 (99.7%)

- run-lsst-grid-MW-s2n20-stamp-nowarp-wt2.00
    - see if bigger weight matters
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp

    m1err: 0.00315538 (99.7%)
    -0.00287034 < m1 < 0.00344043 (99.7%)
    -6.92097e-05 < c1 < 4.98665e-05 (99.7%)
    -5.16471e-05 < c2 < 0.000117282 (99.7%)

    10% better

- run-lsst-grid-W-s2n1000-stamp-nowarp.yaml
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp
    - compare noise on shear when there is low image noise

        R11: 0.4657350943109494
        m1err: 5.13088e-05 (99.7%)
        0.000414377 < m1 < 0.000516995 (99.7%)
        -9.57891e-07 < c1 < 1.52656e-06 (99.7%)
        -1.84983e-06 < c2 < 6.80244e-07 (99.7%)

- run-lsst-grid-MW-s2n1000-stamp-nowarp.yaml
    - same code as run-lsst-grid-W-s2n20-stamp-nowarp
    - compare noise on shear when there is low image noise

        R11: 0.38036695274480337
        m1err: 8.95945e-05 (99.7%)
        0.000214043 < m1 < 0.000393232 (99.7%)
        -5.25911e-07 < c1 < 3.01904e-06 (99.7%)
        -1.21143e-06 < c2 < 2.54645e-06 (99.7%)

        1.75 times higher


- run-lsst-grid-dW-s2n1000-stamp-nowarp.yaml
    - dithering
        R11: 0.46575027329709273
        m1err: 9.62707e-05 (99.7%)
        0.000323878 < m1 < 0.000516419 (99.7%)
        -2.05804e-06 < c1 < 2.05529e-06 (99.7%)
        -1.69456e-06 < c2 < 2.4495e-06 (99.7%)

- run-lsst-grid-dMW-s2n1000-stamp-nowarp.yaml
    - dithering

    R11: 0.3803394833645206
    m1err: 0.000155736 (99.7%)
    0.000243746 < m1 < 0.000555219 (99.7%)
    -2.41928e-06 < c1 < 3.72702e-06 (99.7%)
    -4.56301e-06 < c2 < 1.97249e-06 (99.7%)

    factor of 1.6

- run-lsst-grid-dW-s2n20-stamp-nowarp.yaml
- run-lsst-grid-dMW-s2n20-stamp-nowarp.yaml
    factor of 1.4


runs with non zero offset of sky
---------------------------------

- run-lsst-grid-dMW-s2n20-skyn3-nowarp-thresh5
    - adding -3-sigma offset, mocking up an over subtraction

    - descwl-shear-sims nonzerosky 0342a0e60de5c83fe21b64aa9a0a336d13ea8fa0
    - descwl_coadd no-zero-edge 6e1fd220ab86afe29adff594ab92039959c5e595
    - metadetect use-skynsigma d1342e351736eb490081fa989e601980e58c0b3e
    - mdet-lsst-sim master 4085f05b5e31515d203548aca7e4fc07c454edb1

    R11: 0.37869982831556936
    m1err: 0.00270084 (99.7%)
    -0.00378462 < m1 < 0.00161707 (99.7%)
    -4.32895e-05 < c1 < 6.63724e-05 (99.7%)
    -7.39601e-05 < c2 < 4.06018e-05 (99.7%)

- run-lsst-dsMW-skyn3-nowarp-thresh5
    - adding -3-sigma offset, mocking up an over subtraction
    - descwl-shear-sims nonzerosky 0342a0e60de5c83fe21b64aa9a0a336d13ea8fa0
    - descwl_coadd no-zero-edge 6e1fd220ab86afe29adff594ab92039959c5e595
    - metadetect use-skynsigma d1342e351736eb490081fa989e601980e58c0b3e
    - mdet-lsst-sim master 4085f05b5e31515d203548aca7e4fc07c454edb1

    - looks normal after fixing bug with labels in plot

- run-pairs-sep4.0-s2n20-deblend
    - new refactored lsst metadetect with proper deblending
    - descwl-shear-sims master e96a7be58ac99272a8ded789d7b4b064151c8af0
    - descwl_coadd master 078fa27e9778eb94031a155722cf4cc7f2af10cb
    - metadetect deblend 5cd5fe4dd223ea704c6597785e551a3197607b13
    - mdet-lsst-sim master 3ceb184b6659164478f8a085b7f1423d2ae33cc1

    processed: 35576
    jackknifing: s2n-10-10000-mask_frac-1.00-mfrac-1.00-Tratio-1.2-sdens-100
    R11: 0.4635457697344636
    m1err: 0.000609328 (99.7%)
    -5.47526e-05 < m1 < 0.0011639 (99.7%)
    -7.91407e-05 < c1 < 0.000133769 (99.7%)
    -8.70126e-05 < c2 < 0.000124 (99.7%)

- run-pairs-sep1.35-s2n20-deblend
    - sdss deblender using noise replacer
    - descwl-shear-sims master e96a7be58ac99272a8ded789d7b4b064151c8af0
    - descwl_coadd master 078fa27e9778eb94031a155722cf4cc7f2af10cb
    - metadetect master 10cd228fff80622904831e1e4eb848ec640453c2
    - mdet-lsst-sim master 3ceb184b6659164478f8a085b7f1423d2ae33cc1

    processed: 32000
    R11: -0.11705789415099056
    m1err: 0.00658352 (99.7%)
    0.0635627 < m1 < 0.0767297 (99.7%)
    -0.000278163 < c1 < 0.000361836 (99.7%)
    -0.000237157 < c2 < 0.000421912 (99.7%)

- run-pairs-sep1.35-s2n20-nodeblend
    bias here too, sensible R, but smaller

    processed: 7607
    R11: 0.6750918136974189
    m1err: 0.00177721 (99.7%)
    0.00502345 < m1 < 0.00857787 (99.7%)
    -0.000427798 < c1 < 8.32505e-05 (99.7%)
    -0.000124052 < c2 < 0.000380599 (99.7%)

    differences with regular metadetect?
        - sep
        - dithers in other tests?
        - picking bounding boxes
        - probably used moffat (why would it matter?)

- run-pairs-sep1.35-s2n20-nodeblend-v2
    - using pgauss
    - after the many changes to make the code multiband, etc.
    - descwl-shear-sims 7cfdeec4c52c2db00cc893570986be894c156377
    - descwl_coadd 5b89b44eb79a8178a97bda5205002e97e3fb33ac
    - metadetect 23d01594c2cd95f02b1adfca4059d9a51645f386
    - mdet-lsst-sim 870fddb3f0e90947066c36ca5659836a44db985e

    - 2021-10-22
    processed: 7786
    R11: 1.7120397194900696
    m1err: 0.000920271 (99.7%)
    0.00312113 < m1 < 0.00496167 (99.7%)
    -0.000138092 < c1 < 0.00012891 (99.7%)
    -0.000197802 < c2 < 5.761e-05 (99.7%)

- run-pairs-sep1.35-s2n20-nodeblend-findcen
    - running the center finder
    - using pgauss
    - after the many changes to make the code multiband, etc.
    - descwl-shear-sims 7cfdeec4c52c2db00cc893570986be894c156377
    - descwl_coadd 5b89b44eb79a8178a97bda5205002e97e3fb33ac
    - metadetect f2ab7519497205ddea7d070b05494b8ea688af9e
    - mdet-lsst-sim 870fddb3f0e90947066c36ca5659836a44db985e

    - 2021-10-22

    more biased than run-pairs-sep1.35-s2n20-nodeblend-v2

    processed: 2040
    jackknifing: s2n-10-10000-mask_frac-1.00-mfrac-1.00-Tratio-0.5-sdens-100
    R11: 1.705566875522182
    m1err: 0.00160697 (99.7%)
    0.00685823 < m1 < 0.0100722 (99.7%)
    -0.000229003 < c1 < 0.000267165 (99.7%)
    -0.000260447 < c2 < 0.00023046 (99.7%)


- run-pairs-sep1.35-s2n20-nodeblend-dither
    - checking with image dithers and fixed se_dim to be sure
    processed: 1200
    R11: 0.6737755491156917
    m1err: 0.00455229 (99.7%)
    0.000697937 < m1 < 0.00980251 (99.7%)
    -0.000393714 < c1 < 0.000877697 (99.7%)
    -0.000822316 < c2 < 0.0004693 (99.7%)

- run-pairs-sep1.35-s2n20-nodeblend-ksigma
    - also has dithers, se_dim

    processed: 1200
    R11: 1.8938949967282521
    m1err: 0.00224257 (99.7%)
    0.00192677 < m1 < 0.00641192 (99.7%)
    -0.000351573 < c1 < 0.000386173 (99.7%)
    -0.000283042 < c2 < 0.00048786 (99.7%)

- run-pairs-sep1.35-s2n20-sx
    - descwl-shear-sims master e96a7be58ac99272a8ded789d7b4b064151c8af0
    - descwl_coadd master 078fa27e9778eb94031a155722cf4cc7f2af10cb
    - metadetect master 17674f7a852ddcc7b4f001604c8dff5ce6097532
    - mdet-lsst-sim use_sx 13609a262cb3794be0ab649aaa5d5579ddc7b95b

    processed: 3200
    jackknifing: s2n-10-10000-mask_frac-1.00-mfrac-1.00-Tratio-1.2-sdens-100
    R11: 0.6170621700753418
    m1err: 0.00225996 (99.7%)
    0.0024349 < m1 < 0.00695481 (99.7%)
    -0.000313439 < c1 < 0.000412127 (99.7%)
    -0.000212201 < c2 < 0.000508058 (99.7%)


- run-pairs-sep1.40-s2n20-hlr0.89-sx
    - bigger galaxies
    - descwl-shear-sims master e96a7be58ac99272a8ded789d7b4b064151c8af0
    - descwl_coadd master 078fa27e9778eb94031a155722cf4cc7f2af10cb
    - metadetect master 17674f7a852ddcc7b4f001604c8dff5ce6097532
    - mdet-lsst-sim use_sx 13609a262cb3794be0ab649aaa5d5579ddc7b95b

    processed: 97169
    R11: 0.40945967028883923
    m1err: 0.000435918 (99.7%)
    0.000613935 < m1 < 0.00148577 (99.7%)
    -5.31558e-05 < c1 < 8.88953e-05 (99.7%)
    -3.13975e-05 < c2 < 0.000109373 (99.7%)

Made a KMetacal run for comparison
    - run-lsst-s2n20-wmom-mdet-pairs1.35
    - main 72d93345c869ccb877269fa19c1e7291a04772e7
    - shear 0.02

    processed: 15999
    R11: 0.571035
    using expected bias: 0.000000
    m1err: 0.000525 (99.7%)
    uncorrected m1: 0.004587 +/- 0.000525 (99.7%)
    0.004062 < m1 < 0.005112 (99.7%)
    -0.000124 < c1 < 0.000070 (99.7%)
    -0.000082 < c2 < 0.000114 (99.7%)

Scarlet
--------
run-pairs-sep1.35-s2n20-scarlet-admom
    - thresh = 10
    - default shear of 0.02
    - accidentally didn't set se_dim to 100, coming out at 162x162
    - descwl-shear-sims master e96a7be58ac99272a8ded789d7b4b064151c8af0
    - descwl_coadd master 5b89b44eb79a8178a97bda5205002e97e3fb33ac
    - metadetect scarlet-mdet 108330a253e710c35a7396425d40f6d817a9f6ba
    - mdet-lsst-sim scarlet 6291cdba5a17206cc933888ee907f378a2916d7d

    looks better than run-pairs-sep1.35-s2n20-nodeblend, but
    2.26 times more noisy

    differences
       - deblend True and new scarlet code scarlet
       - admom for measurement
       - detect thresh 10

    Also looks better than kmetacal runs, but could be due to using
    poor settings for scarlet. I am not using defaults from stack
    including snr_min=50 etc.

    processed: 197972
    R11: 0.7325307095550693
    m1err: 0.00101331 (99.7%)
    4.84727e-07 < m1 < 0.0020271 (99.7%)
    -6.65516e-05 < c1 < 7.86594e-05 (99.7%)
    -4.79227e-05 < c2 < 0.000100555 (99.7%)

run-pairs-sep1.35-s2n20-scarlet-gap
    processed: 64300
    R11: 0.887598635365789
    m1err: 0.00179011 (99.7%)
    0.000373307 < m1 < 0.00395353 (99.7%)
    -0.000120743 < c1 < 0.000152387 (99.7%)
    -3.63244e-05 < c2 < 0.000236033 (99.7%)

run-lsst-dMW-nowarp-scarlet
    - descwl-shear-sims 9401cea
    - descwl_coadd 5b89b44eb79a8178a97bda5205002e97e3fb33ac
    - metadetect 0c53af0
    - mdet-lsst-sim scarlet f2613ba597ad522f738c64730005b34df7885f29

    so far (we could run more)[

    processed: 69165
    R11: 1.0425249857448993
    m1err: 0.00147272 (99.7%)
    -0.000299325 < m1 < 0.00264612 (99.7%)
    -3.39389e-05 < c1 < 9.6376e-05 (99.7%)
    -0.00010343 < c2 < 2.64367e-05 (99.7%)

run-pairs-sep1.35-s2n20-scarlet-metacal
    - descwl-shear-sims 7cfdeec4c52c2db00cc893570986be894c156377
    - not used descwl-coadd 5b89b44eb79a8178a97bda5205002e97e3fb33ac
    - metadetect aeff7a4de7915f5f6da69c9be8b7a8f47ca90638
    - scarlet-metacal d55670aef9ae9f2fb0b6b9450a775c6bbb30f995

    processed: 3361
    R11: 1.2854222631798038
    m1err: 0.00158381 (99.7%)
    -0.0630334 < m1 < -0.0598658 (99.7%)
    -0.000184928 < c1 < 0.000114991 (99.7%)
    -0.000174695 < c2 < 0.00013409 (99.7%)


run-pairs-sep1.35-s2n20-scarlet-pgauss
    - new coadd code (but not coadding)
    - remember to set se_dim
    - thresh 5
    ngmix 508f94b5518b073ede5b91da78c1fd193ca36d02
    descwl-shear-sims b8cfda1d7f9dbb34a8d8262ecd2b5f9bf65c8f07
    descwl_coadds b83d906c93136a810f72f3003a07f97cd886ccdc
    metadetect e2dba63d56b8ebf8556887cca9bb61d86cfa2336
    mdet-lsst-sim 00a456b64263f501f8f43461607ce8c3fc674f01

    Note R is different from run-pairs-sep1.35-s2n20-scarlet-gap
    only thing that changed was 1) thresh and 2) se_dim

    thresh should not make much difference, since these objects
    are s/n > 10 anyway

    processed: 8320
    R11: 1.0715987837093865
    m1err: 0.00223881 (99.7%)
    0.00433194 < m1 < 0.00880955 (99.7%)
    -0.0001376 < c1 < 0.000105261 (99.7%)
    -0.000112049 < c2 < 0.000131643 (99.7%)

run-pairs-sep1.35-s2n20-scarlet-pgauss-thresh10
    - see if it was thresh
    - new coadd code (but not coadding)
    - remember to set se_dim
    - thresh 10

    ngmix 508f94b5518b073ede5b91da78c1fd193ca36d02
    descwl-shear-sims b8cfda1d7f9dbb34a8d8262ecd2b5f9bf65c8f07
    descwl_coadds b83d906c93136a810f72f3003a07f97cd886ccdc
    metadetect e2dba63d56b8ebf8556887cca9bb61d86cfa2336
    mdet-lsst-sim 00a456b64263f501f8f43461607ce8c3fc674f01

    processed: 101998
    R11: 1.0104718030248239
    m1err: 0.000806894 (99.7%)
    0.00172309 < m1 < 0.00333688 (99.7%)
    -5.8938e-05 < c1 < 4.43458e-05 (99.7%)
    -4.40641e-05 < c2 < 6.14511e-05 (99.7%)

Shredder
--------
run-pairs-sep1.35-s2n20-shredder-gap
    R11: 0.41296531941997605
    m1err: 0.00684914 (99.7%)
    -0.0364463 < m1 < -0.022748 (99.7%)
    -0.000340497 < c1 < 0.000314805 (99.7%)
    -0.000293359 < c2 < 0.000373701 (99.7%)

Runs with no buffer but cutting objects within some buffer region
------------------------------------------------------------------

run-W-nowarp-trim

    descwl-shear-sims 9edf260cc68ba4fe46ce57db7592eff14edcfcc2
    descwl_coadd 1ee484403fb3a227b49421091982a8b40c482c1c
    metadetect 74d298143870cca616f531ab39b6dc1879e8cf44
    mdet-lsst-sim 8936707902bd5286fe950be9271d1c1bd75d40c0

    processed: 100999
    jackknifing: s2n-10-1000-mask_frac-1.00-mfrac-1.00-Tratio-1.2-sdens-100
    R11: 0.2580761513871097
    m1err: 0.000487529 (99.7%)
    -0.00173768 < m1 < -0.000762627 (99.7%)
    -3.33439e-05 < c1 < 2.25786e-05 (99.7%)
    -3.18065e-05 < c2 < 2.3634e-05 (99.7%)

    jackknifing: s2n-18-1000-mask_frac-1.00-mfrac-1.00-Tratio-1.2-sdens-100
    R11: 0.2802039050307823
    m1err: 0.000395132 (99.7%)
    -0.00117298 < m1 < -0.000382717 (99.7%)
    -1.19433e-05 < c1 < 4.70157e-05 (99.7%)
    -3.81013e-05 < c2 < 2.12085e-05 (99.7%)
